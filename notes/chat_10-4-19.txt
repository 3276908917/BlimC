Dr. Alexander Pollak

Alan Telescope Array (ATA)
	* He works on the hardware side
		* only ten antennae are in operation, currently
	* EM and RF simulations to find weak points in the array, i.e. parts to replace
	
	* 42 antennae
		* Diferent attenuation / gain
		* Hardware calibration currently, but no one uses it
		* We need a software calibration program
	* Current toy model
		* Passband, power supply, cal. power detector, sensor readout, LNA supply, inspection
		* Control board, VNA, Detector+Amplifier, DC Power Supply
	* 42 calibration files necessary (since each anntena differs slightly from the rest)

Amplitude is listed in dB, you would have to convert to a linear form and apply linear regressions
(to get what?) [this is step 1]

Last step: make autotune function from values procured in step 2

Feed/link design ideas:
	* Compromise between length and performance

Questions: @Alex on Slack

HDFI5 filterbank code: Python to C++
* Let's do some optimization: file processing 
* We don't want people to just download entire terabyte files.

? I am guessing that, currently, raw compute is the main issue.
	Since we are writing C++ and not at a GPU interface, 
	we expect to specifically streamline sequential programs.

* Matt Lebowsky is in public data archiving and formatting
	* GNU radio community

Essentially: run the blimpy code in C++
What do I remember from 61C
* Understand what O3 already does (sometimes, your assignment of pointer chains to local variables can backfire!)
* Loop unrolling
* Function unrolling (i.e. cut down on calls to brief functions;
	instead, put the small functions directly in place of the calls)
* Use the smallest variable types possible (e.g. chars, floats)
* Which variables will have the same value every time you refer to them?
* Use open_mp and keep track of how many threads and virtual threads to which
	each of your computing platforms has access.
* Look things up: how have other people rigged things up for the maximum efficiency
	(even if it is a little ugly).
* Get creative! Experiment!

Fallthrough condition:
* MeerKAT: taking data faster than we can store it. Daniel Czech? Dave McMarr?
x sigMF: another version of the final header
~ Andrew: hybrid cloud, data archival
	"Currently we're paranoid about chopping the data in chunks"
~ broken JS web applet
